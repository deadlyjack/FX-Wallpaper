/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkwallpaper"] = self["webpackChunkwallpaper"] || []).push([["cropAndAdjust"],{

/***/ "./src/pages/cropAndAdjust/cropAndAdjust.scss":
/*!****************************************************!*\
  !*** ./src/pages/cropAndAdjust/cropAndAdjust.scss ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://wallpaper/./src/pages/cropAndAdjust/cropAndAdjust.scss?");

/***/ }),

/***/ "./src/components/dialogs/alert/alert.hbs":
/*!************************************************!*\
  !*** ./src/components/dialogs/alert/alert.hbs ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<span class=\\\"message\\\">{{{message}}}</span>\\n<div class=\\\"button-container\\\">\\n  <button action=\\\"ok\\\">OK</button>\\n</div>\");\n\n//# sourceURL=webpack://wallpaper/./src/components/dialogs/alert/alert.hbs?");

/***/ }),

/***/ "./src/pages/cropAndAdjust/cropAndAdjust.hbs":
/*!***************************************************!*\
  !*** ./src/pages/cropAndAdjust/cropAndAdjust.hbs ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<div\\n  class='device'\\n  style='height: {{height}}; width: {{width}}; background-color: {{bgColor}}'\\n>\\n  <pinch-zoom>\\n    <img src='{{src}}' class='wallpaper' style='height: {{height}};' />\\n  </pinch-zoom>\\n  <div class='app-icons'>\\n    <span class='app-icon'></span>\\n    <span class='app-icon'></span>\\n    <span class='app-icon'></span>\\n    <span class='app-icon'></span>\\n  </div>\\n</div>\\n\\n<button action='set-wallpaper'>Set wallpaper</button>\\n<div action='save-image'>\\n  <span class='icon icon-save'></span><span>Save</span>\\n</div>\");\n\n//# sourceURL=webpack://wallpaper/./src/pages/cropAndAdjust/cropAndAdjust.hbs?");

/***/ }),

/***/ "./src/pages/cropAndAdjust/options.hbs":
/*!*********************************************!*\
  !*** ./src/pages/cropAndAdjust/options.hbs ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<div\\n  class='options'\\n  style='display: flex; flex-direction: column; align-items: center; justify-content: center;'\\n>\\n  <style>\\n    .options .option{ display: flex; height: 40px; width: 100%; align-items:\\n    center; }\\n  </style>\\n  <div class='option' which='HOME'>Home screen</div>\\n  <div class='option' which='LOCK'>Lock screen</div>\\n  <div class='option' which='BOTH'>Both</div>\\n</div>\");\n\n//# sourceURL=webpack://wallpaper/./src/pages/cropAndAdjust/options.hbs?");

/***/ }),

/***/ "./src/components/dialogs/alert/alert.js":
/*!***********************************************!*\
  !*** ./src/components/dialogs/alert/alert.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ alert; }\n/* harmony export */ });\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.mjs\");\n/* harmony import */ var _alert_hbs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alert.hbs */ \"./src/components/dialogs/alert/alert.hbs\");\n/* harmony import */ var _box_box__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../box/box */ \"./src/components/dialogs/box/box.js\");\n\n\n\n\n/**\n * Shows alert box with title and message.\n * @param {String} title\n * @param {String} message\n */\nfunction alert(title, message) {\n  const box = (0,_box_box__WEBPACK_IMPORTED_MODULE_2__.default)(title, mustache__WEBPACK_IMPORTED_MODULE_0__.default.render(_alert_hbs__WEBPACK_IMPORTED_MODULE_1__.default, {\n    message,\n  }));\n\n  box.$mask.onclick = box.hide;\n  box.$body.onclick = clickHandler;\n  box.render();\n\n  /**\n   *\n   * @param {MouseEvent} e\n   */\n  function clickHandler(e) {\n    const $target = e.target;\n    if (!($target instanceof HTMLElement)) return;\n    const action = $target.getAttribute('action');\n    if (!action) return;\n\n    if (action === 'ok') box.hide();\n  }\n}\n\n\n//# sourceURL=webpack://wallpaper/./src/components/dialogs/alert/alert.js?");

/***/ }),

/***/ "./src/lib/downloaded.js":
/*!*******************************!*\
  !*** ./src/lib/downloaded.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _save__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./save */ \"./src/lib/save.js\");\n\n\nconst DOWNLOADED = 'downloaded';\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * Add an image to favorite list.\n   * @param {Image} image\n   */\n  add(image) {\n    return _save__WEBPACK_IMPORTED_MODULE_0__.default.add(image, DOWNLOADED);\n  },\n  /**\n   * Remove an image from favorite list.\n   * @param {Image} image\n   */\n  remove(image) {\n    return _save__WEBPACK_IMPORTED_MODULE_0__.default.remove(image, DOWNLOADED);\n  },\n  /**\n   * Clears favorite list permanently\n   */\n  clear() {\n    return _save__WEBPACK_IMPORTED_MODULE_0__.default.clear(DOWNLOADED);\n  },\n  /**\n   * Finds an image in favorite list.\n   * @param {Image} image\n   * @returns {Image}\n   */\n  has(image) {\n    return _save__WEBPACK_IMPORTED_MODULE_0__.default.has(image, DOWNLOADED);\n  },\n  /**\n   * Retrive all images from favorite list.\n   * @returns {Array<Image>}\n   */\n  retrive() {\n    return _save__WEBPACK_IMPORTED_MODULE_0__.default.retrive(DOWNLOADED);\n  },\n});\n\n\n//# sourceURL=webpack://wallpaper/./src/lib/downloaded.js?");

/***/ }),

/***/ "./src/pages/cropAndAdjust/cropAndAdjust.include.js":
/*!**********************************************************!*\
  !*** ./src/pages/cropAndAdjust/cropAndAdjust.include.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CropAndAdjustInclude; }\n/* harmony export */ });\n/* harmony import */ var _cropAndAdjust_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cropAndAdjust.scss */ \"./src/pages/cropAndAdjust/cropAndAdjust.scss\");\n/* harmony import */ var pinch_zoom_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pinch-zoom-element */ \"./node_modules/pinch-zoom-element/dist/pinch-zoom.es.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.mjs\");\n/* harmony import */ var _options_hbs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./options.hbs */ \"./src/pages/cropAndAdjust/options.hbs\");\n/* harmony import */ var _cropAndAdjust_hbs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cropAndAdjust.hbs */ \"./src/pages/cropAndAdjust/cropAndAdjust.hbs\");\n/* harmony import */ var _components_page_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/page/page */ \"./src/components/page/page.js\");\n/* harmony import */ var _components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/dialogs/alert/alert */ \"./src/components/dialogs/alert/alert.js\");\n/* harmony import */ var _components_dialogs_box_box__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/dialogs/box/box */ \"./src/components/dialogs/box/box.js\");\n/* harmony import */ var _components_loader__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/loader */ \"./src/components/loader.js\");\n/* harmony import */ var _lib_downloaded__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../lib/downloaded */ \"./src/lib/downloaded.js\");\n/* harmony import */ var _downloadImage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./downloadImage */ \"./src/pages/cropAndAdjust/downloadImage.js\");\n/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/helpers */ \"./src/utils/helpers.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../strings */ \"./src/strings.js\");\n/* harmony import */ var _utils_path__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/path */ \"./src/utils/path.js\");\n/* harmony import */ var _utils_fs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/fs */ \"./src/utils/fs.js\");\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/url */ \"./src/utils/url.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * Opens new page to crop and image before setting the Image as wallpaper\n *\n * @param {Image} image\n * Image that is to set as wallpaper.\n */\nasync function CropAndAdjustInclude(image) {\n  const $page = (0,_components_page_page__WEBPACK_IMPORTED_MODULE_5__.default)('CropAndAdjust', {\n    id: 'l4wl0xol',\n    secondary: true,\n  });\n  const loadedImage = (0,_downloadImage__WEBPACK_IMPORTED_MODULE_10__.default)(image);\n  const screenHeight = window.screen.height;\n  const screenWidth = window.screen.width;\n  const height = window.innerHeight * 0.7;\n  const width = height * (screenWidth / screenHeight);\n  const loader = (0,_components_loader__WEBPACK_IMPORTED_MODULE_8__.default)('#39f');\n  const MIN_SCALE = 1;\n  const MAX_SCALE = 4;\n  let oldX = 0;\n  let oldY = 0;\n\n  $page.content = mustache__WEBPACK_IMPORTED_MODULE_2__.default.render(_cropAndAdjust_hbs__WEBPACK_IMPORTED_MODULE_4__.default, {\n    height: `${height}px`,\n    width: `${width}px`,\n    bgColor: image.avgColor,\n  });\n  $page.render();\n\n  const $pinchZoom = $page.get('pinch-zoom');\n  const $img = $pinchZoom.get('img');\n  const $device = $page.get('.device');\n  const $button = $page.get('button');\n  const $saveImage = $page.get('[action=\"save-image\"]');\n\n  if (!/(home|lock)( & lock)? screen/i.test(image.title)) {\n    $saveImage.remove();\n  }\n\n  $page.addEventListener('click', handleOnclick);\n  $pinchZoom.addEventListener('change', handlePinchZoom);\n  $page.onhide = () => {\n    $button.removeEventListener('click', handleOnclick);\n    $pinchZoom.removeEventListener('change', handlePinchZoom);\n    loadedImage.abort();\n    loader.destroy();\n  };\n\n  await _utils_helpers__WEBPACK_IMPORTED_MODULE_11__.default.wait(300);\n\n  if (image.src.thumbnail) {\n    $img.src = image.src.thumbnail;\n  }\n  const savedImage = _lib_downloaded__WEBPACK_IMPORTED_MODULE_9__.default.has(image);\n  if (savedImage) {\n    await _utils_helpers__WEBPACK_IMPORTED_MODULE_11__.default.wait(300);\n    image.localUri = savedImage.localUri;\n    $img.src = savedImage.localUri;\n  } else {\n    loader\n      .showValue(true)\n      .show();\n    loadedImage.onprogress = (progress) => {\n      if (progress === 100) {\n        loader.hide();\n        return;\n      }\n      if (progress === 99.9) {\n        loader.animate();\n        return;\n      }\n\n      loader.progress(progress);\n    };\n    $img.src = await loadedImage.getLocalUri();\n  }\n\n  /**\n   *\n   * @param {MouseEvent} e\n   */\n  function handleOnclick(e) {\n    const $target = e.target;\n    if ($target instanceof HTMLElement) {\n      const action = $target.getAttribute('action');\n      if (!action) return;\n\n      switch (action) {\n        case 'set-wallpaper':\n          setWallpaper();\n          break;\n        case 'save-image':\n          saveImage();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  async function saveImage() {\n    if (hasStoragePermission) {\n      loader\n        .showValue(false)\n        .show()\n        .animate()\n        .message(`${_strings__WEBPACK_IMPORTED_MODULE_12__.default.saving}...`);\n      const { name } = loadedImage;\n      const destination = _utils_url__WEBPACK_IMPORTED_MODULE_15__.default.join(cordova.file.externalRootDirectory, 'pictures');\n      const parsed = _utils_path__WEBPACK_IMPORTED_MODULE_13__.default.parse(name);\n      let newFileName = _utils_url__WEBPACK_IMPORTED_MODULE_15__.default.join(destination, name);\n      let count = 1;\n\n      if (!await _utils_fs__WEBPACK_IMPORTED_MODULE_14__.default.exists(destination)) {\n        await _utils_fs__WEBPACK_IMPORTED_MODULE_14__.default.createDir(destination);\n      }\n\n      await (async function findNewName() {\n        if (await _utils_fs__WEBPACK_IMPORTED_MODULE_14__.default.exists(newFileName)) {\n          const newName = `${parsed.name}_${count++}${parsed.ext}`;\n          newFileName = _utils_url__WEBPACK_IMPORTED_MODULE_15__.default.join(destination, newName);\n          findNewName();\n        }\n      }());\n\n      if (image.localUri) {\n        try {\n          const { data } = await _utils_fs__WEBPACK_IMPORTED_MODULE_14__.default.readFile(image.localUri);\n          await _utils_fs__WEBPACK_IMPORTED_MODULE_14__.default.writeFile(newFileName, data, true, false);\n          loader.hide();\n          (0,_components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.INFO, _strings__WEBPACK_IMPORTED_MODULE_12__.default.imageSaved);\n        } catch (error) {\n          loader.hide();\n          (0,_components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.ERROR, _utils_helpers__WEBPACK_IMPORTED_MODULE_11__.default.getErrorMessage(error));\n        }\n      }\n\n      return;\n    }\n\n    (0,_components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.INFO, _strings__WEBPACK_IMPORTED_MODULE_12__.default.permissionRequired);\n  }\n\n  async function setWallpaper() {\n    const API = await new Promise((resolve, reject) => {\n      window.wallpaper.getAPILevel(resolve, reject);\n    });\n\n    try {\n      if (API >= 24) {\n        const which = await askWhich();\n        await setWallpaperFor(which);\n      } else {\n        await setWallpaperFor('HOME');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function askWhich() {\n    return new Promise((resolve) => {\n      const box = (0,_components_dialogs_box_box__WEBPACK_IMPORTED_MODULE_7__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.setAs, _options_hbs__WEBPACK_IMPORTED_MODULE_3__.default, 'center', true);\n      box.render();\n      box.$mask.onclick = box.hide;\n      box.$body.onclick = (e) => {\n        box.hide();\n        const $target = e.target;\n        if (!($target instanceof HTMLElement)) return;\n        const which = $target.getAttribute('which');\n        if (!which) return;\n\n        resolve(which);\n      };\n    });\n  }\n\n  async function setWallpaperFor(which) {\n    loader\n      .showValue(false)\n      .show()\n      .animate()\n      .message(`${_strings__WEBPACK_IMPORTED_MODULE_12__.default.settingWallpaper}...`);\n\n    try {\n      const contentUri = await new Promise((resolve, reject) => {\n        window.system.convertUriToContentSchema($img.src, (res) => {\n          console.log(res);\n          resolve(res);\n        }, (err) => {\n          console.error(err);\n          reject(err);\n        });\n      });\n\n      const { scale } = $pinchZoom;\n      const scaledImageWidth = ($img.clientWidth * scale);\n      const scaledImageHeight = ($img.clientHeight * scale);\n      const rect = {\n        x: Math.abs($pinchZoom.x / scaledImageWidth),\n        y: Math.abs($pinchZoom.y / scaledImageHeight),\n        h: $device.clientHeight / scaledImageHeight,\n        w: $device.clientWidth / scaledImageWidth,\n        s: scale,\n      };\n      window.wallpaper.setWallpaper(which, contentUri, rect, onSetWallpaper, (err) => {\n        loader\n          .hide()\n          .message('');\n        (0,_components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.ERROR, err);\n      });\n    } catch (error) {\n      loader.hide();\n      console.error(error);\n    }\n  }\n\n  function onSetWallpaper(res) {\n    if (res) {\n      loader.hide();\n      (0,_components_dialogs_alert_alert__WEBPACK_IMPORTED_MODULE_6__.default)(_strings__WEBPACK_IMPORTED_MODULE_12__.default.INFO, _strings__WEBPACK_IMPORTED_MODULE_12__.default.wallpaperChanged);\n      document.dispatchEvent(new CustomEvent('wallpaperchange'));\n    }\n  }\n\n  function handlePinchZoom() {\n    const { scale } = $pinchZoom;\n\n    const y = (scaleY) => {\n      const newY = $pinchZoom.y;\n      const newHeight = -((($img.clientHeight * scaleY) + 4) - $pinchZoom.clientHeight);\n\n      if (newY > 0) return 0;\n      if (newY < newHeight) return newHeight;\n      return newY;\n    };\n\n    const x = (scaleX) => {\n      const newX = $pinchZoom.x;\n      const newWidth = -(($img.clientWidth * scaleX) - $pinchZoom.clientWidth);\n\n      // console.log({ newX, newWidth });\n      if (newX > 0) return 0;\n      if (newX < newWidth) return newWidth;\n      return newX;\n    };\n\n    if (scale > MIN_SCALE && scale <= MAX_SCALE) {\n      $pinchZoom.setTransform({\n        y: y(scale),\n        x: x(scale),\n        allowChangeEvent: false,\n      });\n    } else if (scale > MAX_SCALE) {\n      $pinchZoom.setTransform({\n        scale: MAX_SCALE,\n        x: oldX,\n        y: oldY,\n        allowChangeEvent: false,\n      });\n    } else {\n      $pinchZoom.setTransform({\n        scale: MIN_SCALE,\n        x: x(MIN_SCALE),\n        y: y(MIN_SCALE),\n        allowChangeEvent: false,\n      });\n    }\n\n    oldX = $pinchZoom.x;\n    oldY = $pinchZoom.y;\n  }\n}\n\n\n//# sourceURL=webpack://wallpaper/./src/pages/cropAndAdjust/cropAndAdjust.include.js?");

/***/ }),

/***/ "./src/pages/cropAndAdjust/downloadImage.js":
/*!**************************************************!*\
  !*** ./src/pages/cropAndAdjust/downloadImage.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DownloadImage; }\n/* harmony export */ });\n/* harmony import */ var _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deadlyjack/ajax */ \"./node_modules/@deadlyjack/ajax/dist/ajax.js\");\n/* harmony import */ var _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_downloaded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/downloaded */ \"./src/lib/downloaded.js\");\n/* harmony import */ var _utils_fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/fs */ \"./src/utils/fs.js\");\n/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/helpers */ \"./src/utils/helpers.js\");\n\n\n\n\n\n/**\n *\n * @param {Image} image\n */\nfunction DownloadImage(image) {\n  const filename = `${image.id}.jpeg`;\n  let onProgress;\n  let xhr;\n  let aborted;\n  let imageData;\n\n  return {\n    /**\n     * @type {ArrayBuffer}\n     */\n    get imageData() {\n      return imageData;\n    },\n    get name() {\n      return filename;\n    },\n    get onprogress() {\n      return onProgress;\n    },\n    set onprogress(fun) {\n      onProgress = fun;\n    },\n    async getLocalUri() {\n      const downloadedImage = _lib_downloaded__WEBPACK_IMPORTED_MODULE_1__.default.has(image);\n      if (!downloadedImage) {\n        const imageDir = cordova.file.externalDataDirectory;\n        const imageLocalUri = imageDir + filename;\n        const data = await _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0___default()({\n          url: image.src.original,\n          responseType: 'arraybuffer',\n          xhr: (xhrObj) => {\n            xhr = xhrObj;\n            xhrObj.onprogress = (e) => {\n              const percent = (e.loaded / e.total) * 100;\n              _utils_helpers__WEBPACK_IMPORTED_MODULE_3__.default.call(onProgress, Math.min(percent, 99.9));\n            };\n\n            xhrObj.onabort = () => {\n              aborted = true;\n              _utils_helpers__WEBPACK_IMPORTED_MODULE_3__.default.call(onProgress, 100);\n            };\n          },\n        }); // END: ajax call\n\n        if (aborted || !data) {\n          _utils_helpers__WEBPACK_IMPORTED_MODULE_3__.default.call(onProgress, 100);\n          return null;\n        }\n\n        imageData = data;\n        await _utils_fs__WEBPACK_IMPORTED_MODULE_2__.default.writeFile(imageLocalUri, data, true, false);\n\n        _utils_helpers__WEBPACK_IMPORTED_MODULE_3__.default.call(onProgress, 100);\n        image.localUri = imageLocalUri;\n        if (/^https?:\\/\\//.test(image.src.original)) _lib_downloaded__WEBPACK_IMPORTED_MODULE_1__.default.add(image);\n        return imageLocalUri;\n      }\n\n      return downloadedImage.localUri;\n    },\n    abort() {\n      if (xhr && 'abort' in xhr) xhr.abort();\n    },\n  };\n}\n\n\n//# sourceURL=webpack://wallpaper/./src/pages/cropAndAdjust/downloadImage.js?");

/***/ }),

/***/ "./src/utils/fs.js":
/*!*************************!*\
  !*** ./src/utils/fs.js ***!
  \*************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deadlyjack/ajax */ \"./node_modules/@deadlyjack/ajax/dist/ajax.js\");\n/* harmony import */ var _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./url */ \"./src/utils/url.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   *\n   * @param {string} url\n   * @returns {Promise<Array<Entry>>}\n   */\n  listDir(url) {\n    return new Promise((resolve, reject) => {\n      function success(fs) {\n        const reader = fs.createReader();\n        reader.readEntries(resolve, reject);\n      }\n\n      window.resolveLocalFileSystemURL(url, success, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {string} filename\n   * @param {any} data\n   * @param {boolean} create If this property is true, and the requested file or\n   * directory doesn't exist, the user agent should create it.\n   * The default is false. The parent directory must already exist.\n   * @param {boolean} exclusive If true, and the create option is also true,\n   * the file must not exist prior to issuing the call.\n   * Instead, it must be possible for it to be created newly at call time. The default is false.\n   * @returns {Promise<String>}\n   */\n  writeFile(filename, data, create = false, exclusive = true) {\n    const name = filename.split('/').pop();\n    const path = _url__WEBPACK_IMPORTED_MODULE_1__.default.dirname(filename);\n\n    if (data instanceof ArrayBuffer) {\n      data = new Blob([data]);\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!create) {\n        window.resolveLocalFileSystemURL(filename, (fileEntry) => {\n          if (!fileEntry.isFile) reject(new Error('Expected file but got directory.'));\n          fileEntry.createWriter((file) => {\n            file.onwriteend = () => resolve(filename);\n            file.onerror = (err) => reject(err.target.error);\n            file.write(data);\n          });\n        }, reject);\n      } else {\n        window.resolveLocalFileSystemURL(path, (fs) => {\n          fs.getFile(name, {\n            create,\n            exclusive: create ? exclusive : false,\n          }, (fileEntry) => {\n            fileEntry.createWriter((file) => {\n              file.onwriteend = () => resolve(filename);\n              file.onerror = (err) => reject(err.target.error);\n              file.write(data);\n            });\n          }, reject);\n        }, reject);\n      }\n    });\n  },\n\n  /**\n   *\n   * @param {string} filename\n   * @returns {Promise}\n   */\n  deleteFile(filename) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(filename, (entry) => {\n        if (entry.isFile) {\n          entry.remove(resolve, reject);\n        } else {\n          entry.removeRecursively(resolve, reject);\n        }\n      }, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {string} filename\n   * @returns {Promise<any>}\n   */\n  readFile(filename) {\n    return new Promise((resolve, reject) => {\n      if (!filename) return reject(new Error(`Invalid valud of fileURL: ${filename}`));\n\n      return _deadlyjack_ajax__WEBPACK_IMPORTED_MODULE_0___default()({\n        url: filename,\n        responseType: 'arraybuffer',\n      }).then((res) => {\n        if (res) {\n          return resolve({\n            data: res,\n          });\n        }\n        return Promise.reject();\n      }).catch(() => {\n        window.resolveLocalFileSystemURL(filename, (fileEntry) => {\n          fileEntry.file((file) => {\n            const fileReader = new FileReader();\n            fileReader.onloadend = function onloadend() {\n              resolve({\n                file,\n                data: this.result,\n              });\n            };\n\n            fileReader.onerror = reject;\n\n            fileReader.readAsArrayBuffer(file);\n          }, reject);\n        }, reject);\n      });\n    });\n  },\n\n  /**\n   *\n   * @param {string} url\n   * @param {string} newname\n   * @returns {Promise<String>}\n   */\n  renameFile(url, newname) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(url, (fs) => {\n        fs.getParent((parent) => {\n          const parentUrl = _url__WEBPACK_IMPORTED_MODULE_1__.default.decode(parent.nativeURL);\n          const newUrl = _url__WEBPACK_IMPORTED_MODULE_1__.default.join(parentUrl, newname);\n          fs.moveTo(parent, newname, () => resolve(newUrl), reject);\n        }, reject);\n      }, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {string} path\n   * @param {string} dirname\n   * @returns {Promise<String>}\n   */\n  createDir(path, dirname) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(path, (fs) => {\n        fs.getDirectory(dirname, {\n          create: true,\n        }, () => resolve(_url__WEBPACK_IMPORTED_MODULE_1__.default.join(path, dirname)), reject);\n      }, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {String} src\n   * @param {String} dest\n   * @returns\n   */\n  copy(src, dest) {\n    return this.moveOrCopy('copyTo', src, dest);\n  },\n\n  move(src, dest) {\n    return this.moveOrCopy('moveTo', src, dest);\n  },\n\n  /**\n   *\n   * @param {\"copyTO\"|\"moveTo\"} action\n   * @param {string} src\n   * @param {string} dest\n   * @returns {Promise<String>}\n   */\n  moveOrCopy(action, src, dest) {\n    return new Promise((resolve, reject) => {\n      this.verify(src, dest)\n        .then((res) => {\n          const {\n            src: srcUrl,\n            dest: destUrl,\n          } = res;\n\n          srcUrl[action](\n            destUrl,\n            undefined,\n            (entry) => resolve(_url__WEBPACK_IMPORTED_MODULE_1__.default.decode(entry.nativeURL)),\n            reject,\n          );\n        })\n        .catch(reject);\n    });\n  },\n\n  /**\n   *\n   * @param {String} filename\n   * @returns {Promise<FileStatus>}\n   */\n  stats(filename) {\n    return new Promise((resolve, reject) => {\n      window.sdcard.stats(filename, (stats) => {\n        stats.uri = filename;\n        resolve(stats);\n      }, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {string} src\n   * @param {string} dest\n   * @returns {Promise<{src:Entry, dest:Entry}>}\n   */\n  verify(src, dest) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(src, (srcEntry) => {\n        window.resolveLocalFileSystemURL(dest, (destEntry) => {\n          const srcUrl = _url__WEBPACK_IMPORTED_MODULE_1__.default.decode(destEntry.nativeURL) + srcEntry.name;\n          window.resolveLocalFileSystemURL(srcUrl, () => {\n            // eslint-disable-next-line prefer-promise-reject-errors\n            reject({\n              code: 12,\n            });\n          }, (err) => {\n            if (err.code === 1) {\n              resolve({\n                src: srcEntry,\n                dest: destEntry,\n              });\n            } else {\n              reject(err);\n            }\n          });\n        }, reject);\n      }, reject);\n    });\n  },\n\n  /**\n   *\n   * @param {Promise<Boolean>} url\n   */\n  exists(url) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(url, () => {\n        resolve(true);\n      }, (err) => {\n        if (err.code === 1) resolve(false);\n        reject(err);\n      });\n    });\n  },\n\n});\n\n\n//# sourceURL=webpack://wallpaper/./src/utils/fs.js?");

/***/ }),

/***/ "./src/utils/path.js":
/*!***************************!*\
  !*** ./src/utils/path.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * The path.dirname() method returns the directory name of a path,\n   * similar to the Unix dirname command.\n   * Trailing directory separators are ignored.\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    if (path.endsWith('/')) path = path.slice(0, -1);\n    const parts = path.split('/').slice(0, -1);\n    if (!/^(\\.|\\.\\.|)$/.test(parts[0])) parts.unshift('.');\n    const res = parts.join('/');\n\n    if (!res) return '/';\n    return res;\n  },\n\n  /**\n   * The path.basename() methods returns the last portion of a path,\n   * similar to the Unix basename command.\n   * Trailing directory separators are ignored, see path.sep.\n   * @param {string} path\n   * @returns {string}\n   */\n  basename(path, ext = '') {\n    ext = ext || '';\n    if (path === '' || path === '/') return path;\n    const ar = path.split('/');\n    const last = ar.slice(-1)[0];\n    // if (!last) return decodeURL(ar.slice(-2)[0]);\n    if (!last) return ar.slice(-2)[0];\n    let res = decodeURI(last.split('?')[0] || '');\n    if (this.extname(res) === ext) res = res.replace(new RegExp(`${ext}$`), '');\n    // return decodeURL(res);\n    return res;\n  },\n\n  /**\n   * returns the extension of the path, from the last occurrence of the . (period)\n   * character to end of string in the last portion of the path.\n   * If there is no . in the last portion of the path, or if there are no . characters\n   * other than the first character of the basename of path (see path.basename()) , an\n   * empty string is returned.\n   * @param {string} path\n   */\n  extname(path) {\n    const filename = path.split('/').slice(-1)[0];\n    if (/.+\\..*$/.test(filename)) return /(?:\\.([^.]*))?$/.exec(filename)[0] || '';\n    return '';\n  },\n\n  /**\n   * returns a path string from an object.\n   * @param {PathObject} pathObject\n   */\n  format(pathObject) {\n    let {\n      dir,\n      ext,\n      name,\n    } = pathObject;\n\n    const {\n      root,\n      base,\n    } = pathObject;\n\n    if (base || !ext.startsWith('.')) {\n      ext = '';\n      if (base) name = '';\n    }\n\n    dir = (dir || root);\n\n    if (!dir.endsWith('/')) dir += '/';\n\n    return dir + (base || name) + ext;\n  },\n\n  /**\n   * The path.isAbsolute() method determines if path is an absolute path.\n   * @param {string} path\n   */\n  isAbsolute(path) {\n    return path.startsWith('/');\n  },\n\n  /**\n   * Joins the given number of paths\n   * @param  {...string} paths\n   */\n  join(...paths) {\n    const res = paths.join('/');\n    return this.normalize(res);\n  },\n\n  /**\n   * Normalizes the given path, resolving '..' and '.' segments.\n   * @param {string} path\n   */\n  normalize(path) {\n    path = path.replace(/\\.\\/+/g, './');\n    path = path.replace(/\\/+/g, '/');\n\n    const resolved = [];\n    const pathAr = path.split('/');\n\n    pathAr.forEach((dir) => {\n      if (dir === '..') {\n        if (resolved.length) resolved.pop();\n        return;\n      }\n      if (dir === '.') return;\n\n      resolved.push(dir);\n    });\n\n    return resolved.join('/');\n  },\n\n  /**\n   *\n   * @param {string} path\n   * @returns {PathObject}\n   */\n  parse(path) {\n    const root = path.startsWith('/') ? '/' : '';\n    const dir = this.dirname(path);\n    const ext = this.extname(path);\n    const name = this.basename(path, ext);\n    const base = this.basename(path);\n\n    return {\n      root,\n      dir,\n      base,\n      ext,\n      name,\n    };\n  },\n\n  /**\n * Resolve the path eg.\n```js\nresolvePath('path/to/some/dir/', '../../dir') //returns 'path/to/dir'\n```\n * @param {...string} paths\n */\n  resolve(...paths) {\n    if (!paths.length) throw new Error('resolve(...path) : Arguments missing!');\n\n    let result = '';\n\n    paths.forEach((path) => {\n      if (path.startsWith('/')) {\n        result = path;\n        return;\n      }\n\n      result = this.normalize(this.join(result, path));\n    });\n\n    if (result.startsWith('/')) return result;\n    return `/${result}`;\n  },\n\n  /**\n  * Checks if child uri is originated from root uri eg.\n  * ```js\n  isParent(\"file:///sdcard/\", \"file://sdcard/path/to/file\") //true\n  isParent(\"file:///sdcard2/\", \"file://sdcard1/path/to/file\") //false\n  * ```\n  * @param {string} root\n  * @param {string} child\n  */\n  isParent(root, child) {\n    return new RegExp(`^${root}`).test(child);\n  },\n\n  /**\n   * Gets path for path2 relative to path1\n   * @param {String} path1\n   * @param {String} path2\n   */\n  convertToRelative(path1, path2) {\n    path1 = this.normalize(path1).split('/');\n    path2 = this.normalize(path2).split('/');\n\n    const p1len = path1.length;\n    const p2len = path2.length;\n\n    let flag = false;\n    const path = [];\n    path1.forEach((dir, i) => {\n      if (dir === path2[i] && !flag) return;\n\n      path.push(path2[i]);\n      if (!flag) {\n        flag = true;\n        return;\n      }\n\n      if (flag) path.unshift('..');\n    });\n\n    if (p2len > p1len) path.push(...path2.slice(p1len));\n\n    return path.join('/');\n  },\n});\n\n\n//# sourceURL=webpack://wallpaper/./src/utils/path.js?");

/***/ }),

/***/ "./src/utils/uri.js":
/*!**************************!*\
  !*** ./src/utils/uri.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path */ \"./src/utils/path.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * Parse content uri to rootUri and docID\n   *\n   * eg.\n   *```js\n   * parse(\"content://.../AA98-181D%3A::.../index.html\")\n   * //{rootUri: \"content://.../AA98-181D%3A\", docId: \"...index.html\"}\n   *```\n   *\n   * @param {string} contentUri\n   * @returns {{rootUri: string, docId: string, isFileUri: boolean}}\n   */\n  parse(contentUri) {\n    let rootUri;\n    let\n      docId = '';\n\n    const DOC_PROVIDER = /^content:\\/\\/com\\.((?![:<>\"/\\\\|?*]).)*\\.documents\\//;\n    const TREE_URI = /^content:\\/\\/com\\.((?![:<>\"/\\\\|?*]).)*\\.documents\\/tree\\//;\n    const SINGLE_URI = /^content:\\/\\/com\\.(((?![:<>\"/\\\\|?*]).)*)\\.documents\\/document/;\n    const PRIMARY = /^content:\\/\\/com\\.android\\.externalstorage\\.documents\\/document\\/primary/;\n    let FILE_ROOT;\n\n    try {\n      FILE_ROOT = cordova.file.externalRootDirectory;\n    } catch (error) {\n      FILE_ROOT = 'file:///storage/emulated/0/';\n    }\n\n    if (DOC_PROVIDER.test(contentUri)) {\n      // If matches, it means url can be converted to file:///\n      if (PRIMARY.test(contentUri)) {\n        rootUri = FILE_ROOT + decodeURIComponent(contentUri).split(':').slice(-1)[0];\n      } else if (TREE_URI.test(contentUri)) {\n        if (/::/.test(contentUri)) {\n          [rootUri, docId] = contentUri.split('::');\n        } else {\n          rootUri = contentUri;\n          docId = decodeURIComponent(contentUri.split('/').slice(-1)[0]);\n        }\n      } else if (SINGLE_URI.test(contentUri)) {\n        const [provider, providerId] = SINGLE_URI.exec(contentUri);\n        docId = decodeURIComponent(contentUri); // DecodUri\n        docId = docId.replace(provider, ''); // replace single to tree\n        docId = _path__WEBPACK_IMPORTED_MODULE_0__.default.normalize(docId); // normalize docid\n\n        if (docId.startsWith('/')) docId = docId.slice(1); // remove leading '/'\n\n        rootUri = `content://com.${providerId}.documents/tree/${docId.split(':')[0]}%3A`;\n      }\n\n      return {\n        rootUri,\n        docId,\n        isFileUri: /^file:\\/\\/\\//.test(rootUri),\n      };\n    }\n\n    throw new Error('Invalid uri format.');\n  },\n  /**\n   * Formats the five contentUri object to string\n   * @param {{rootUri: string, docId: string} | String} contentUriObject or rootId\n   * @param {string} [docId]\n   * @returns {string}\n   */\n  format(contentUriObject, docId) {\n    let rootUri;\n\n    if (typeof contentUriObject === 'string') {\n      rootUri = contentUriObject;\n    } else {\n      rootUri = contentUriObject.rootUri;\n      docId = contentUriObject.docId;\n    }\n\n    if (docId) return [rootUri, docId].join('::');\n    return rootUri;\n  },\n  /**\n   * Gets virtual address by replacing root with name i.e. added in file explorer\n   * @param {string} url\n   */\n  getVirtualAddress(url) {\n    try {\n      const {\n        docId,\n        rootUri,\n        isFileUri,\n      } = this.parse(url);\n\n      if (isFileUri) return url;\n      const customUuid = JSON.parse(localStorage.customUuid || '[]');\n\n      const found = customUuid.find((storage) => storage.uri === rootUri);\n      if (found) {\n        const id = rootUri.split('/').pop();\n        let filePath = docId.replace(this.decode(id), '');\n        if (filePath.startsWith('/')) filePath = filePath.slice(1);\n        return `${found.name}/${filePath}`;\n      }\n      return null;\n    } catch (e) {\n      return url;\n    }\n  },\n  decode(url) {\n    if (/%[0-9a-f]{2}/i.test(url)) {\n      const newurl = decodeURIComponent(url);\n      if (url === newurl) return url;\n      return this.decode(newurl);\n    }\n    return url;\n  },\n});\n\n\n//# sourceURL=webpack://wallpaper/./src/utils/uri.js?");

/***/ }),

/***/ "./src/utils/url.js":
/*!**************************!*\
  !*** ./src/utils/url.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path */ \"./src/utils/path.js\");\n/* harmony import */ var _uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uri */ \"./src/utils/uri.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n\n  /**\n   * Returns basename from a url eg. 'index.html' from 'ftp://localhost/foo/bar/index.html'\n   * @param {string} url\n   */\n  basename(url) {\n    url = this.parse(url).url;\n    const protocol = this.getProtocol(url);\n    if (protocol === 'content:') {\n      try {\n        const {\n          rootUri,\n          docId,\n          isFileUri,\n        } = _uri__WEBPACK_IMPORTED_MODULE_1__.default.parse(url);\n        let id;\n\n        if (isFileUri) return this.basename(rootUri);\n        if (docId.endsWith('/')) id = docId.slice(0, -1);\n\n        id = docId.split(':').pop();\n        return this.pathname(id).split('/').pop();\n      } catch (error) {\n        return null;\n      }\n    } else {\n      if (url.endsWith('/')) url = url.slice(0, -1);\n      return this.pathname(url).split('/').pop();\n    }\n  },\n  /**\n   *\n   * @param {String} url\n   * returns the extension of the path, from the last occurrence of the . (period)\n   * character to end of string in the last portion of the path.\n   * If there is no . in the last portion of the path, or if there are no .\n   * characters other than the first character of the basename of path (see path.basename()),\n   * an empty string is returned.\n   */\n  extname(url) {\n    const name = this.basename(url);\n    if (name) return _path__WEBPACK_IMPORTED_MODULE_0__.default.extname(name);\n    return null;\n  },\n  /**\n   *\n   * @param  {...string} pathnames\n   */\n  join(...pathnames) {\n    if (pathnames.length < 2) throw new Error('Required at least two parameters');\n\n    const {\n      url,\n      query,\n    } = this.parse(pathnames[0]);\n    let modifiedUrl;\n\n    const protocol = (this.PROTOCOL_PATTERN.exec(url) || [])[0] || '';\n\n    if (protocol === 'content://') {\n      try {\n        if (pathnames[1].startsWith('/')) pathnames[1] = pathnames[1].slice(1);\n        const contentUri = _uri__WEBPACK_IMPORTED_MODULE_1__.default.parse(url);\n        // const protocol = this.getProtocol(contentUri.rootUri);\n        if (protocol === 'content://') {\n          const [root, pathname] = contentUri.docId.split(':');\n          const newDocId = _path__WEBPACK_IMPORTED_MODULE_0__.default.join(pathname, ...pathnames.slice(1));\n          return `${contentUri.rootUri}::${root}:${newDocId}${query}`;\n        }\n        return this.join(contentUri.rootUri, ...pathnames.slice(1));\n      } catch (error) {\n        return null;\n      }\n    } else if (protocol) {\n      modifiedUrl = url.replace(new RegExp(`^${protocol}`), '');\n      pathnames[0] = modifiedUrl;\n      return protocol + _path__WEBPACK_IMPORTED_MODULE_0__.default.join(...pathnames) + query;\n    } else {\n      return _path__WEBPACK_IMPORTED_MODULE_0__.default.join(url, ...pathnames.slice(1)) + query;\n    }\n  },\n  /**\n   * Make url safe by encoding url components\n   * @param {string} url\n   */\n  safe(url) {\n    function fixedEncodeURIComponent(str) {\n      return encodeURIComponent(str).replace(/[!'()*]/g, (c) => `%${c.charCodeAt(0).toString(16)}`);\n    }\n\n    const {\n      url: uri,\n      query,\n    } = this.parse(url);\n    url = uri;\n    const protocol = (this.PROTOCOL_PATTERN.exec(url) || [])[0] || '';\n    if (protocol) url = url.replace(new RegExp(`^${protocol}`), '');\n    const parts = url.split('/').map((part, i) => {\n      if (i === 0) return part;\n      return fixedEncodeURIComponent(part);\n    });\n    return protocol + parts.join('/') + query;\n  },\n  /**\n   * Gets pathname from url eg. gets '/foo/bar' from 'ftp://myhost.com/foo/bar'\n   * @param {string} url\n   */\n  pathname(url) {\n    if (typeof url !== 'string' || !this.PROTOCOL_PATTERN.test(url)) return url;\n\n    [url] = url.split('?');\n    const protocol = (this.PROTOCOL_PATTERN.exec(url) || [])[0] || '';\n\n    if (protocol === 'content://') {\n      try {\n        const {\n          rootUri,\n          docId,\n          isFileUri,\n        } = _uri__WEBPACK_IMPORTED_MODULE_1__.default.parse(url);\n        if (isFileUri) return this.pathname(rootUri);\n        return `/${docId.split(':')[1] || docId}`;\n      } catch (error) {\n        return null;\n      }\n    } else {\n      if (protocol) url = url.replace(new RegExp(`^${protocol}`), '');\n\n      if (protocol !== 'file:///') return `/${url.split('/').slice(1).join('/')}`;\n\n      return `/${url}`;\n    }\n  },\n\n  /**\n   * Returns dirname from url eg. 'ftp://localhost/foo/'  from 'ftp://localhost/foo/bar'\n   * @param {string} url\n   */\n  dirname(url) {\n    if (typeof url !== 'string') throw new Error('URL must be string');\n\n    const urlObj = this.parse(url);\n    url = urlObj.url;\n    const protocol = this.getProtocol(url);\n\n    if (protocol === 'content:') {\n      try {\n        const {\n          rootUri,\n          docId,\n          isFileUri,\n        } = _uri__WEBPACK_IMPORTED_MODULE_1__.default.parse(url);\n        let id;\n\n        if (isFileUri) return this.dirname(rootUri);\n        if (docId.endsWith('/')) id = docId.slice(0, -1);\n\n        id = [...docId.split('/').slice(0, -1), ''].join('/');\n        return _uri__WEBPACK_IMPORTED_MODULE_1__.default.format(rootUri, id);\n      } catch (error) {\n        return null;\n      }\n    } else {\n      if (url.endsWith('/')) url = url.slice(0, -1);\n      return [...url.split('/').slice(0, -1), ''].join('/') + urlObj.query;\n    }\n  },\n\n  /**\n   * Parse given url into url and query\n   * @param {string} url\n   * @returns {URLObject}\n   */\n  parse(url) {\n    const [uri, query = ''] = url.split(/(?=\\?)/);\n    return {\n      url: uri,\n      query,\n    };\n  },\n\n  /**\n   * Formate Url object to string\n   * @param {object} urlObj\n   * @param {\"ftp:\"|\"sftp:\"|\"http:\"|\"https:\"} urlObj.protocol\n   * @param {string|number} urlObj.hostname\n   * @param {string} [urlObj.path]\n   * @param {string} [urlObj.username]\n   * @param {string} [urlObj.password]\n   * @param {string|number} [urlObj.port]\n   * @param {object} [urlObj.query]\n   */\n  formate(urlObj) {\n    const {\n      protocol,\n      hostname,\n      username,\n      password,\n      path: pathname,\n      port,\n      query,\n    } = urlObj;\n\n    const enc = (str) => encodeURIComponent(str);\n\n    if (!protocol || !hostname) throw new Error(\"Cannot formate url. Missing 'protocol' and 'hostname'.\");\n\n    let string = `${protocol}//`;\n\n    if (username && password) string += `${enc(username)}:${enc(password)}@`;\n    else if (username) string += `${username}@`;\n\n    string += hostname;\n\n    if (port) string += `:${port}`;\n\n    if (pathname) {\n      let modifiedPath;\n      if (!pathname.startsWith('/')) modifiedPath = `/${pathname}`;\n\n      string += modifiedPath;\n    }\n\n    if (query && typeof query === 'object') {\n      string += '?';\n\n      Object.keys(query).forEach((key) => {\n        string += `${enc(key)}=${enc(query[key])}&`;\n      });\n\n      string = string.slice(0, -1);\n    }\n\n    return string;\n  },\n  /**\n   * Returns protocol of a url e.g. 'ftp:' from 'ftp://localhost/foo/bar'\n   * @param {string} url\n   * @returns {\"ftp:\"|\"sftp:\"|\"http:\"|\"https:\"}\n   */\n  getProtocol(url) {\n    return (/^([a-z]+:)\\/\\/\\/?/i.exec(url) || [])[1] || '';\n  },\n  /**\n   *\n   * @param {string} url\n   * @returns {string}\n   */\n  hidePassword(url) {\n    const urlObj = new URL(url);\n    if (urlObj.protocol === 'file:') {\n      return url;\n    }\n    return `${urlObj.origin}${urlObj.pathname}`;\n  },\n  /**\n   *\n   * @param {string} url\n   * @returns\n   */\n  decode(url) {\n    if (/%[0-9a-f]{2}/i.test(url)) {\n      const newurl = decodeURIComponent(url);\n      if (url === newurl) return url;\n      return this.decode(newurl);\n    }\n    return url;\n  },\n  PROTOCOL_PATTERN: /^[a-z]+:\\/\\/\\/?/i,\n});\n\n\n//# sourceURL=webpack://wallpaper/./src/utils/url.js?");

/***/ })

}]);